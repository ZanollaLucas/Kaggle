source("C:/Users/Dell/Desktop/Alura/MEU R MESTRADO/Visualização de dados/grafico3d.R")
install.packages("plotly")
source("C:/Users/Dell/Desktop/Alura/MEU R MESTRADO/Visualização de dados/grafico3d.R")
library(plotly)
#aeronave_csv <- read_excel("C:/Users/LucasZanolla/Desktop/Mestrado/Visualização de dados/aeronave.csv.xlsx")
aeronave_csv <- read.csv("aeronave.csv")
library(readxl)
aeronave_csv <- read_excel("C:/Users/Dell/Desktop/Alura/MEU R MESTRADO/Visualização de dados/aeronave.csv.xlsx")
View(aeronave_csv)
#aeronave_csv <- read_excel("C:/Users/LucasZanolla/Desktop/Mestrado/Visualização de dados/aeronave.csv.xlsx")
aeronave_csv <- read.csv("aeronave.csv")
fatalidades = aeronave_csv$quantidade_fatalidades
fase = aeronave_csv$fase_operacao
df= data.frame(table(fase,fatalidades))
df = df[order(df$fatalidades, decreasing = TRUE), ]
df <- df [!(df$Freq == 0), ]
df$fatalidades = as.character(df$fatalidades)
df <- df %>% replace(.=="NULL", 0)
p <- plot_ly(df, x = ~df$Freq, y = ~df$fatalidades, z = ~df$fase, color = ~df$fatalidades, colors = c('#BF382A', '#0C4B8E')) %>%
add_markers() %>%
layout(scene = list(xaxis = list(title = 'Frequencia'),
yaxis = list(title = 'Fatalidades'),
zaxis = list(title = 'Fase de Voo'))) %>%
layout(title ="GRÁFICO 3D SOBRE AS FATALIADES E FASE DO OCORRIDO" )
p
setwd("C:/Users/Dell/Desktop/Git/Kaggle/Titanic")
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(echo = FALSE)
knitr::opts_chunk$set(echo = FALSE)
setwd("C:/Users/Dell/Desktop/Git/Kaggle/Titanic")
titanic.train <- read.csv(file = "train.csv")
setwd("C:/Users/Dell/Desktop/Git/Kaggle/Titanic")
titanic.train <- read.csv(file = "train.csv", stringsAsFactors = FALSE)
View(titanic.train)
setwd("C:/Users/Dell/Desktop/Git/Kaggle/Titanic")
titanic.train <- read.csv(file = "train.csv", stringsAsFactors = FALSE)
titanic.test <- read.csv(file = "test.csv", stringsAsFactors = FALSE)
titanic.test$Survived <- NA
titanic.test$Survived <- NA
titanic.test$IsTraingSet <- FALSE
titanic.train$IsTraingSet <- TRUE
titanic.full <- rbind(titanic.train, titanic.test)
summary(titanic.full)
agemean <- mean(titanic.full$Age, na.rm = TRUE)
agemean
titanic.full[is.na(titanic.full$Age), "Age"]
agemean <- mean(titanic.full$Age, na.rm = TRUE)
agemean
titanic.full[is.na(titanic.full$Age), "Age"] <- agemean
agemean <- mean(titanic.full$Age, na.rm = TRUE)
round(agemean)
titanic.full[is.na(titanic.full$Age), "Age"] <- agemean
agemean <- round(mean(titanic.full$Age, na.rm = TRUE))
titanic.full[is.na(titanic.full$Age), "Age"] <- agemean
agemean <- round(mean(titanic.full$Age, na.rm = TRUE))
titanic.full[is.na(titanic.full$Age), "Age"] <- agemean
faremean <- round(mean(titanic.full$Fare, na.rm = TRUE))
titanic.full[is.na(titanic.full$Fare), "Fare"] <- faremean
titanic.train <- titanic.full[titanic.full$IsTraingSet==TRUE,]
titanic.test <- titanic.full[titanic.full$IsTraingSet==FALSE,]
str(titanic.full)
#str(titanic.full)
titanic.full$Pclass <- as.factor(titanic.full$Pclass)
titanic.full$Sex <- as.factor(titanic.full$Sex)
titanic.full$Embarked <- as.factor(titanic.full$Embarked)
titanic.train <- titanic.full[titanic.full$IsTraingSet==TRUE,]
titanic.test <- titanic.full[titanic.full$IsTraingSet==FALSE,]
titanic.train$Survived <- as.factor(titanic.train$Survived)
install.packages("randomForest")
library(randomForest)
features.equation <- "Pclass + Sex + Age + SibSp + Parch + Fare + Embarked"
PassengerId <- titanic.test$PassengerId
output.df <- as.data.frame(PassengerId)
output.df$Survived <- predict(titanic.model)
survive.eq <- "Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked"
survive.form <- as.formula(survive.eq)
titanic.model <- randomForest(formula = survive.form, data = titanic.train,
ntree= 500, mtry = 3, nodesize = 0.01 * nrow(titanic.test))
features.equation <- "Pclass + Sex + Age + SibSp + Parch + Fare + Embarked"
PassengerId <- titanic.test$PassengerId
output.df <- as.data.frame(PassengerId)
output.df$Survived <- predict(titanic.model)
features.equation <- "Pclass + Sex + Age + SibSp + Parch + Fare + Embarked"
PassengerId <- titanic.test$PassengerId
output.df <- as.data.frame(PassengerId)
output.df$Survived <- predict(titanic.model, data= titanic.test)
features.equation <- "Pclass + Sex + Age + SibSp + Parch + Fare + Embarked"
PassengerId <- titanic.test$PassengerId
output.df <- as.data.frame(PassengerId)
Survived <- predict(titanic.model, newdata= titanic.test)
output.df <- Survived
View(titanic.test)
features.equation <- "Pclass + Sex + Age + SibSp + Parch + Fare + Embarked"
PassengerId <- titanic.test$PassengerId
output.df <- as.data.frame(PassengerId)
Survived <- predict(titanic.model, newdata= titanic.test)
output.df$Survived <- Survived
View(output.df)
write.csv(output.df, file = "First_Submission.csv", row.names = FALSE)
install.packages("BBmisc")
library(randomForest)
library(BBmisc)
library(randomForest)
library(BBmisc)
agemean <- round(mean(titanic.full$Age, na.rm = TRUE))
titanic.full[is.na(titanic.full$Age), "Age"] <- agemean
faremean <- round(mean(titanic.full$Fare, na.rm = TRUE))
titanic.full[is.na(titanic.full$Fare), "Fare"] <- faremean
titanic.full$Fare <- normalize(titanic.full$Fare)
library(randomForest)
library(BBmisc)
setwd("C:/Users/Dell/Desktop/Git/Kaggle/Titanic")
titanic.train <- read.csv(file = "train.csv", stringsAsFactors = FALSE)
titanic.test <- read.csv(file = "test.csv", stringsAsFactors = FALSE)
titanic.test$Survived <- NA
titanic.test$IsTraingSet <- FALSE
titanic.train$IsTraingSet <- TRUE
titanic.full <- rbind(titanic.train, titanic.test)
summary(titanic.full)
#agemean <- round(mean(titanic.full$Age, na.rm = TRUE))
#titanic.full[is.na(titanic.full$Age), "Age"] <- agemean
age.equa = "Age ~  Pclass + Sex + SibSp + Parch + Fare + Embarked"
age.model <- lm(
formula =  age.equa,
data = titanic.full
)
age.row <- titanic.full[is.na(titanic.full$Age), c("Pclass", "Sex", "SibSp" , "Parch" , "Fare" ,"Embarked")]
Age.prediction <- predict(age.model, newdata = age.row)
titanic.full[is.na(titanic.full$Age), "Age"] <- Age.prediction
faremean <- round(mean(titanic.full$Fare, na.rm = TRUE))
titanic.full[is.na(titanic.full$Fare), "Fare"] <- faremean
titanic.full$Fare <- normalize(titanic.full$Fare)
#str(titanic.full)
titanic.full$Pclass <- as.factor(titanic.full$Pclass)
titanic.full$Sex <- as.factor(titanic.full$Sex)
titanic.full$Embarked <- as.factor(titanic.full$Embarked)
titanic.train <- titanic.full[titanic.full$IsTraingSet==TRUE,]
titanic.test <- titanic.full[titanic.full$IsTraingSet==FALSE,]
titanic.train$Survived <- as.factor(titanic.train$Survived)
survive.eq <- "Survived ~ Pclass + Sex + Age + SibSp + Parch + Fare + Embarked"
survive.form <- as.formula(survive.eq)
titanic.model <- randomForest(formula = survive.form, data = titanic.train,
ntree= 500, mtry = 3, nodesize = 0.01 * nrow(titanic.test))
features.equation <- "Pclass + Sex + Age + SibSp + Parch + Fare + Embarked"
PassengerId <- titanic.test$PassengerId
output.df <- as.data.frame(PassengerId)
Survived <- predict(titanic.model, newdata= titanic.test)
output.df$Survived <- Survived
write.csv(output.df, file = "Second_Submission.csv", row.names = FALSE)
